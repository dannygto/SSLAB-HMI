{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "🚀 完整构建部署流程",
			"type": "shell",
			"command": "Write-Host '🚀 开始完整构建部署流程...' -ForegroundColor Magenta; $env:ANDROID_HOME = 'D:\\Android\\Sdk'; Write-Host '1️⃣ 清理项目...' -ForegroundColor Yellow; Set-Location SSLAB-Android-HMI; ./gradlew clean; Write-Host '2️⃣ 构建APK...' -ForegroundColor Yellow; ./gradlew assembleDebug; if ($LASTEXITCODE -eq 0) { Write-Host '✅ 构建成功!' -ForegroundColor Green; $apkPath = 'app\\build\\outputs\\apk\\debug\\app-debug.apk'; Write-Host '3️⃣ 安装到本地设备...' -ForegroundColor Yellow; ./gradlew installDebug; Write-Host '4️⃣ 连接远程虚拟机...' -ForegroundColor Yellow; & \"$env:ANDROID_HOME\\platform-tools\\adb.exe\" connect 192.168.0.145:5555; Start-Sleep 3; Write-Host '5️⃣ 推送到虚拟机...' -ForegroundColor Yellow; & \"$env:ANDROID_HOME\\platform-tools\\adb.exe\" install -r $apkPath; Write-Host '6️⃣ 启动应用...' -ForegroundColor Yellow; & \"$env:ANDROID_HOME\\platform-tools\\adb.exe\" shell am start -n com.sslab.hmi/.MainActivity; Write-Host '🎉 完整部署完成！' -ForegroundColor Green } else { Write-Host '❌ 构建失败!' -ForegroundColor Red }",
			"isBackground": false,
			"problemMatcher": [
				"$gradle"
			],
			"group": {
				"kind": "build",
				"isDefault": true
			},
			"options": {
				"cwd": "D:\\CODE\\SSLAB-HMI",
				"shell": {
					"executable": "powershell.exe",
					"args": ["-Command"]
				}
			},
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"showReuseMessage": true,
				"clear": true
			}
		},
		{
			"label": "🖥️ 启动模拟服务器",
			"type": "shell",
			"command": "Write-Host '🖥️ 启动SSLAB设备模拟服务器...' -ForegroundColor Cyan; Write-Host '🔄 清理占用的端口...' -ForegroundColor Yellow; Get-Process -Name node -ErrorAction SilentlyContinue | Stop-Process -Force -ErrorAction SilentlyContinue; Start-Sleep -Seconds 2; Write-Host '📂 切换到服务器目录...' -ForegroundColor Cyan; Set-Location 'Device-Simulator-Server'; Write-Host '🚀 启动服务器...' -ForegroundColor Green; Write-Host '访问地址: http://192.168.0.145:8080' -ForegroundColor Yellow; Write-Host '互动教学: http://192.168.0.145:8080/interactive-teaching' -ForegroundColor Yellow; node src/server.js",
			"isBackground": true,
			"group": "build",
			"options": {
				"cwd": "D:\\CODE\\SSLAB-HMI",
				"shell": {
					"executable": "powershell.exe",
					"args": ["-Command"]
				}
			},
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "new",
				"showReuseMessage": true,
				"clear": true
			},
			"problemMatcher": []
		},
		{
			"label": "📱 启动APP并监控",
			"type": "shell",
			"command": "Write-Host '📱 启动APP并开始监控...' -ForegroundColor Cyan; $env:ANDROID_HOME = 'D:\\Android\\Sdk'; Write-Host '🔍 检查设备连接...' -ForegroundColor Yellow; $devices = & \"$env:ANDROID_HOME\\platform-tools\\adb.exe\" devices | Select-String -Pattern 'device$'; Write-Host \"发现 $($devices.Count) 个设备\" -ForegroundColor Green; if ($devices.Count -gt 0) { $realDevice = ($devices | Select-String -Pattern '^[0-9a-f]+' | Select-Object -First 1).Line.Split()[0]; $emulator = ($devices | Select-String -Pattern 'emulator' | Select-Object -First 1).Line.Split()[0]; if ($realDevice) { Write-Host \"🚀 启动真机APP ($realDevice)...\" -ForegroundColor Green; & \"$env:ANDROID_HOME\\platform-tools\\adb.exe\" -s $realDevice shell am start -n com.sslab.hmi/.MainActivity } if ($emulator) { Write-Host \"🚀 启动模拟器APP ($emulator)...\" -ForegroundColor Green; & \"$env:ANDROID_HOME\\platform-tools\\adb.exe\" -s $emulator shell am start -n com.sslab.hmi/.MainActivity } Write-Host '📊 开始监控应用日志...' -ForegroundColor Cyan; Write-Host '按Ctrl+C停止监控' -ForegroundColor Yellow; if ($realDevice) { & \"$env:ANDROID_HOME\\platform-tools\\adb.exe\" -s $realDevice logcat -s 'SSLAB-HMI' 'AndroidRuntime' 'System.err' } elseif ($emulator) { & \"$env:ANDROID_HOME\\platform-tools\\adb.exe\" -s $emulator logcat -s 'SSLAB-HMI' 'AndroidRuntime' 'System.err' } } else { Write-Host '❌ 没有找到连接的设备' -ForegroundColor Red }",
			"isBackground": true,
			"group": "test",
			"options": {
				"cwd": "D:\\CODE\\SSLAB-HMI",
				"shell": {
					"executable": "powershell.exe",
					"args": ["-Command"]
				}
			},
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "new",
				"showReuseMessage": false,
				"clear": true
			},
			"problemMatcher": []
		}
	]
}
